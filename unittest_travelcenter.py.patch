# Patch generated by Pyment v0.4.0dev

--- a/abfahrt\unittest\unittest_travelcenter.py
+++ b/abfahrt\unittest\unittest_travelcenter.py
@@ -37,8 +37,10 @@
 test_travelcenter = Travel_Center(stationlist,linelist,trains)
 	
 class Testing(unittest.TestCase):
+    """ """
 
 	def test_get_stations_by_line(self):
+		""" """
 		self.assertEqual(Travel_Center.get_stations_by_line(1), [stations[0] ,stations[1]])
 		self.assertEqual(Travel_Center.get_stations_by_line(2), [stations[1], stations[2]])
 		self.assertEqual(Travel_Center.get_stations_by_line(3), [stations[2], stations[3]])
@@ -47,6 +49,7 @@
 	   #self.assertEqual(Travel_Center.get_stations_by_line(None)) Wrong input data is inposible 
 	
 	def test_find_only_one_line_between_stations(self):
+		""" """
 				#(self,start_station_id,end_station_id):   # return [length,[line]]
 		self.assertEqual(Travel_Center.find_only_one_line_between_stations(self, 1, 2), [1, [1]])
 		self.assertEqual(Travel_Center.find_only_one_line_between_stations(self, 1, 3), [1, [5]])
@@ -60,6 +63,7 @@
 	#	self.assertEqual(Travel_Center._get_all_line_station(self, 1, 2, linelist), [1, [4]])
 	
 	def test_find_lines(self):
+		""" """
 		self.assertEqual(Travel_Center._find_lines(self, 1, 2), [[1]])
 		self.assertEqual(Travel_Center._find_lines(self, 1, 3), [[5]])
 		self.assertEqual(Travel_Center._find_lines(self, 2, 3), [[2]])
@@ -76,6 +80,7 @@
 	#	self.assertEqual(Travel_Center.time_count_length(self, 1, 3), [1, [1]])
 
 	def test_station_is_never_blocked(self):
+		""" """
 	#station_is_never_blocked(station, stationlist: Stationlist):
 		self.assertEqual(Travel_Center.station_is_never_blocked(stations[0], test_stationlist), False)
 		self.assertEqual(Travel_Center.station_is_never_blocked(stations[1], test_stationlist), True)
@@ -86,6 +91,7 @@
 
 
 	def test__check_capacity(self):
+		""" """
 		#def _check_capacity(trains, group_size, start_times, start_stations):
 		self.assertEqual(Travel_Center._check_capacity(trains, 15, 3, stations ), False)
  
@@ -103,6 +109,7 @@
 
 '''   
 	def test_station_is_in_station_times_list(self):
+		""" """
 		self.assertEqual(Travel_Center.station_is_in_station_times_list(stations[0], test_stationlist_times), False)
 		self.assertEqual(Travel_Center.station_is_in_station_times_list(stations[1], test_stationlist_times), True)
 		self.assertEqual(Travel_Center.station_is_in_station_times_list(stations[2], test_stationlist_times), True)
